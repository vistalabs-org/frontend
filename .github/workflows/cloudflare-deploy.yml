name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Cache build output to speed up subsequent builds
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('frontend/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('frontend/package-lock.json') }}-
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build Next.js app
        working-directory: ./frontend
        run: npm run build

      - name: Install Wrangler globally
        run: npm install -g wrangler

      - name: Clean cache directories
        working-directory: ./frontend
        run: |
          rm -rf .next/cache
          echo "Removed cache directory to prevent asset size errors"

      - name: Create wrangler.toml with specific excludes
        working-directory: ./frontend
        run: |
          cat > wrangler.toml << 'EOL'
          name = "market"
          compatibility_date = "2025-03-29"
          main = "workers-site/index.js"

          [assets]
          directory = ".next"
          exclude = ["**/*.pack", ".next/cache/**"]
          EOL

      - name: Deploy to Cloudflare Pages
        working-directory: ./frontend
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: wrangler pages deploy .next --project-name=market 